package cdp.test.automation.steps;

import cdp.test.automation.model.User;
import cdp.test.automation.pages.DashboardPage;
import cdp.test.automation.pages.LoginPage;
import cdp.test.automation.pages.SettingsPage;
import cdp.test.automation.pages.components.LeftMenu;
import cdp.test.automation.pages.components.MessageFloatLine;
import com.codeborne.selenide.ElementsCollection;
import org.apache.commons.lang3.RandomStringUtils;
import org.testng.Assert;

public class Steps {
    public DashboardPage tryToLogin(User user) {
        return new LoginPage()
                .fillUserNameInput(user.getLogin())
                .fillPasswordInput(user.getPassword())
                .clickLoginButton();
    }

    public MessageFloatLine updateSettings() {
        return clickSettingBtn().fillKeepLogs().clickSubmitButton();
    }

    public SettingsPage clickSettingBtn() {
        return new DashboardPage().clickSettingBtn();
    }

    public MessageFloatLine createNewDashboard(String name, String description) {
        return new DashboardPage().clickAddDashBtn().fillNameOfDashboard(name).fillDescriptionOfDashboard(description)
                .clickShareSwitcher().clickAddBtn();
    }

    public MessageFloatLine editDashboard(ElementsCollection newList, String descriptionUp) {
        return new DashboardPage().clickTableViewBtn().clickEditBtn(newList).fillDescriptionOfDashboard(descriptionUp).clickAddBtn();
    }

    public MessageFloatLine deleteDashboard(ElementsCollection newList) {
        return new DashboardPage().clickTableViewBtn().clickDeleteBtn(newList).clickDeleteBtn();
    }

    public ElementsCollection getElements(String text) {
        return new DashboardPage().clickTableViewBtn().visiblePage().getSearchListByText(text);
    }

    public void clickExistDemoByPostfix(String postfix) {
        ElementsCollection columns = getElements(postfix);
        Assert.assertEquals(1, columns.size(), "name with postfix should be only one");
        new DashboardPage().clickNameLink(columns);
    }

    public void clickDashboardMenu() {
        new LeftMenu().clickDashboardMenuBtn().clickTableViewBtn();
    }

    public String getFirstDefectType() {
        return new DashboardPage().demoDashboardVisible()
                .goToTooltip().getFirstTextDefectType();
    }

    public String createDashBoard(User user) {
        String expDemoDataGenMsg = "Demo data has been generated";
        String postfix = RandomStringUtils.randomAlphanumeric(6);
        tryToLogin(user)
                .clickSettingBtn().clickDemoDataNavigate().fillPostfixField(postfix).clickSubmitButton();
        String actDemoDataGenMsg = new SettingsPage().loaderHide().getMessageTest();
        Assert.assertEquals(expDemoDataGenMsg, actDemoDataGenMsg, "Demo should be generated by User");
        return postfix;
    }

}
